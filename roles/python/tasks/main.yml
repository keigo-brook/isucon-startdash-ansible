- name: "Check version"
  become: no
  command: python --version
  register: python_version
- debug: var=python_version.stderr_lines

- name: "Check place"
  become: no
  command: which python
  register: which_python
- debug: var=which_python.stdout_lines

- name: "which pyenv"
  become: no
  command: which pyenv
  register: pyenv_install
  failed_when: pyenv_install.rc == 0
- debug: var=pyenv_install.stdout_lines

- block:
    - debug: msg="-------- pyenv install --------"
    - name: "Install dependencies"
      when: "ansible_distribution == 'Ubuntu'"
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - build-essential
        - libncursesw5-dev
        - libreadline-dev
        - libssl-dev
        - libgdbm-dev
        - libc6-dev
        - libsqlite3-dev
        - tk-dev
        - libbz2-dev
    - name: "Install dependencies"
      when: "ansible_distribution == 'CentOS'"
      yum:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - gcc
        - zlib-devel
        - bzip2
        - bzip2-devel
        - readline
        - readline-devel
        - sqlite
        - sqlite-devel
        - openssl
        - openssl-devel
        - git
    - name: "Clone"
      become: no
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
      register: clone_result
      with_items:
        - repo: git://github.com/yyuu/pyenv.git
          dest: ~/.pyenv
        - repo: git://github.com/yyuu/pyenv-virtualenv.git
          dest: ~/.pyenv/plugins/pyenv-virtualenv
    - name: "Install pyenv"
      become: no
      shell: '{{ item.cmd }}'
      register: RESULT
      with_items:
        - cmd: echo 'export PYENV_ROOT="${HOME}/.pyenv"' >> ~/.zprofile
        - cmd: echo 'if [ -d "${PYENV_ROOT}" ]; then' >> ~/.zprofile
        - cmd: echo '    export PATH=${PYENV_ROOT}/bin:$PATH' >> ~/.zprofile
        - cmd: echo '    eval "$(pyenv init -)"' >> ~/.zprofile
        - cmd: echo 'fi' >> ~/.zprofile
        - cmd: source ~/.zprofile; pyenv -v
    - debug: msg="---------- block end   ----------"
  when: pyenv_install.rc == 1

- name: "Install python ver.{{ python_ver }}"
  become: no
  shell: "{{ item.cmd }}"
  register: python_install
  with_items:
     - cmd: source ~/.zprofile; pyenv -v
     - cmd: source ~/.zprofile; python -V
     - cmd: source ~/.zprofile; pyenv install '{{ python_ver }}'
     - cmd: source ~/.zprofile; pyenv global '{{ python_ver }}'
     - cmd: source ~/.zprofile; python -V
- name: results
  debug: var=python_install.results
